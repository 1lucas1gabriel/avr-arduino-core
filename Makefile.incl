######################################################################
#  Makefile for AVR compiler (Using AVR-GCC with Arduino libraries)
######################################################################

MCU             = atmega328p
PORT            = /dev/ttyUSB0

######################################################################
#	Requires AVR-GCC and AVDDUDE packages pre-installed
######################################################################

TOP_DIR 			= $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

PREFIX			= avr
AVRDUDE			= avrdude
#AVRDUDE_CFG    ?= $(TOP_DIR)/avrdude.conf

DEFS			+= -DF_CPU=16000000L
DEFS			+= -DARDUINO=10816
DEFS			+= -DARDUINO_AVR_UNO
DEFS			+= -DARDUINO_ARCH_AVR

CC			:= $(PREFIX)-gcc
CXX			:= $(PREFIX)-g++
LD			:= $(PREFIX)-gcc
AR			:= $(PREFIX)-ar
AS			:= $(PREFIX)-gcc
OBJCOPY		:= $(PREFIX)-objcopy
SIZE		:= $(PREFIX)-size
OBJDUMP		:= $(PREFIX)-objdump
GDB			:= $(PREFIX)-gdb

# List object file to be created
TEMP1 			= $(patsubst %.c,%.o,$(SRCFILES))
TEMP2			= $(patsubst %.S,%.o,$(TEMP1))
OBJS 			= $(patsubst %.cpp,%.o,$(TEMP2))

######################################################################
# FLAGS
######################################################################

ARCH_FLAGS		= -mmcu=$(MCU)

CSTD		?= -std=gnu11
CPPSTD		?= -std=gnu++11
OPT			:= -Os -g -w

# C flags
TGT_CFLAGS	+= $(OPT) $(CSTD)
TGT_CFLAGS	+= $(ARCH_FLAGS)
#TGT_CFLAGS	+= -fno-fat-lto-objects 
TGT_CFLAGS	+= -ffunction-sections -fdata-sections

# C++ flags
TGT_CPPFLAGS	+= $(OPT) $(CPPSTD)
TGT_CPPFLAGS	+= $(ARCH_FLAGS)
TGT_CPPFLAGS	+= -Wno-error=narrowing  
TGT_CPPFLAGS	+= -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics

# C & C++ preprocessor common flags
#TGT_COMMFLAGS	+= -flto
TGT_COMMFLAGS	+= -MMD
TGT_COMMFLAGS	+= $(DEFS)
TGT_COMMFLAGS	+= $(INCLUDES)

# Assembler flags
ASFLAGS		+= -g -x assembler-with-cpp -MMD #-flto 
ASFLAGS		+= $(ARCH_FLAGS)
ASFLAGS		+= $(DEFS)
ASFLAGS		+= $(INCLUDES)

# Linking flags
TGT_LDFLAGS		+= $(OPT)
TGT_LDFLAGS		+= $(ARCH_FLAGS)
TGT_LDFLAGS		+= -Wl,--gc-sections
#TGT_LDFLAGS		+= -flto -fuse-linker-plugin


######################################################################
.SUFFIXES:	.elf .bin .hex .srec .list .map .images .a
.SECONDEXPANSION:
.SECONDARY:

elf:	$(DEPS) $(BINARY).elf
bin:	$(DEPS) $(BINARY).bin
hex:	$(DEPS) $(BINARY).hex
srec:	$(DEPS) $(BINARY).srec
list:	$(DEPS) $(BINARY).list
lib:	$(ARCHIVE).a	#create static lib(.a)


print-%:
	@echo $*=$($*)

%.images: %.bin %.hex %.srec %.list %.map
	@#printf "*** $* images generated ***\n"

%.bin: %.elf
	@#printf "  OBJCOPY $(*).bin\n"
	$(OBJCOPY) -Obinary $(*).elf $(*).bin

%.hex: %.elf
	@#printf "  OBJCOPY $(*).hex\n"
	$(OBJCOPY) -Oihex $(*).elf $(*).hex

%.srec: %.elf
	@#printf "  OBJCOPY $(*).srec\n"
	$(OBJCOPY) -Osrec $(*).elf $(*).srec

%.list: %.elf
	@#printf "  OBJDUMP $(*).list\n"
	$(OBJDUMP) -S $(*).elf > $(*).list

# this links the .o files with .a
%.elf: $(OBJS)
	$(LD) $(TGT_LDFLAGS) $(LDFLAGS) $(OBJS) $(LDLIBS) -o $(*).elf
	$(SIZE) $(BINARY).elf

%.o: %.c
	@#printf "  CC      $(*).c\n"
	$(CC) $(TGT_CFLAGS) $(CFLAGS) $(TGT_COMMFLAGS) -o $(*).o -c $(*).c

%.o: %.cxx
	@#printf "  CXX     $(*).cxx\n"
	$(CXX) $(TGT_CPPFLAGS) $(CXXFLAGS) $(TGT_COMMFLAGS) -o $(*).o -c $(*).cxx

%.o: %.cpp
	@#printf "  CXX     $(*).cpp\n"
	$(CXX) $(TGT_CPPFLAGS) $(CXXFLAGS) $(TGT_COMMFLAGS) -o $(*).o -c $(*).cpp

%.o: %.S
	$(AS) $(ASFLAGS) -o $(*).o -c $(*).S

%.a: $(OBJS)
	$(AR) rcs lib$(ARCHIVE).a $(OBJS)

clean:
	@#printf "  CLEAN\n"
	$(RM) *.o *.d generated.* $(OBJS) $(patsubst %.o,%.d,$(OBJS))


clobber: clean
	rm -f *.elf *.bin *.hex *.srec *.list *.map $(CLOBBER)

#nano old_bootloader
burn-nano:	$(BINARY).hex
			$(AVRDUDE) -v -p$(MCU) -carduino -P$(PORT) -b 57600 -D -U flash:w:$(BINARY).hex:i

burn:		$(BINARY).hex
			$(AVRDUDE) -v -p$(MCU) -carduino -P$(PORT) -b 115200 -D -U flash:w:$(BINARY).hex:i

.PHONY: images clean elf bin hex srec list all

-include $(OBJS:.o=.d)

# End
